<?php
/**
 * SHGM Exam System - Sistem Sabitleri
 * 
 * @author SHGM Development Team
 * @version 1.0.0
 * @created 2024
 * @file tn_constants.php
 */

// Direct access engelle
if (!defined('SYSTEM_START_TIME')) {
    die('Direct access denied!');
}

// =======================================================================
// KULLANICI TİPLERİ VE YETKİLERİ
// =======================================================================

// Kullanıcı rolleri
define('TN_ROLE_SUPER_ADMIN', 'super_admin');
define('TN_ROLE_ADMIN', 'admin');
define('TN_ROLE_INSTRUCTOR', 'instructor');
define('TN_ROLE_STUDENT', 'student');
define('TN_ROLE_OBSERVER', 'observer');

// Kullanıcı durumları
define('TN_USER_STATUS_ACTIVE', 1);
define('TN_USER_STATUS_INACTIVE', 0);
define('TN_USER_STATUS_SUSPENDED', -1);
define('TN_USER_STATUS_PENDING', 2);

// Oturum durumları
define('TN_SESSION_ACTIVE', 'active');
define('TN_SESSION_EXPIRED', 'expired');
define('TN_SESSION_TERMINATED', 'terminated');

// =======================================================================
// SINAV SİSTEMİ SABİTLERİ
// =======================================================================

// Sınav durumları
define('HA_EXAM_STATUS_DRAFT', 'draft');              // Taslak
define('HA_EXAM_STATUS_PUBLISHED', 'published');      // Yayınlanmış
define('HA_EXAM_STATUS_ACTIVE', 'active');            // Aktif
define('HA_EXAM_STATUS_COMPLETED', 'completed');      // Tamamlanmış
define('HA_EXAM_STATUS_CANCELLED', 'cancelled');      // İptal edilmiş
define('HA_EXAM_STATUS_ARCHIVED', 'archived');        // Arşivlenmiş

// Soru tipleri
define('HA_QUESTION_TYPE_MULTIPLE_CHOICE', 'multiple_choice');    // Çoktan seçmeli
define('HA_QUESTION_TYPE_TRUE_FALSE', 'true_false');             // Doğru/Yanlış
define('HA_QUESTION_TYPE_FILL_BLANK', 'fill_blank');             // Boşluk doldurma
define('HA_QUESTION_TYPE_ESSAY', 'essay');                       // Açık uçlu
define('HA_QUESTION_TYPE_MATCHING', 'matching');                 // Eşleştirme
define('HA_QUESTION_TYPE_ORDERING', 'ordering');                 // Sıralama

// Soru zorluk seviyeleri
define('HA_DIFFICULTY_EASY', 'easy');          // Kolay
define('HA_DIFFICULTY_MEDIUM', 'medium');      // Orta
define('HA_DIFFICULTY_HARD', 'hard');          // Zor
define('HA_DIFFICULTY_EXPERT', 'expert');     // Uzman

// Sınav oturum durumları
define('HA_SESSION_STATUS_NOT_STARTED', 'not_started');
define('HA_SESSION_STATUS_IN_PROGRESS', 'in_progress');
define('HA_SESSION_STATUS_COMPLETED', 'completed');
define('HA_SESSION_STATUS_TIMEOUT', 'timeout');
define('HA_SESSION_STATUS_TERMINATED', 'terminated');
define('HA_SESSION_STATUS_SUSPENDED', 'suspended');

// Cevap durumları
define('HA_ANSWER_STATUS_NOT_ANSWERED', 'not_answered');
define('HA_ANSWER_STATUS_ANSWERED', 'answered');
define('HA_ANSWER_STATUS_MARKED', 'marked');
define('HA_ANSWER_STATUS_SKIPPED', 'skipped');

// =======================================================================
// KAYIT VE MEDYA SABİTLERİ
// =======================================================================

// Kayıt tipleri
define('HA_RECORDING_TYPE_AUDIO', 'audio');
define('HA_RECORDING_TYPE_VIDEO', 'video');
define('HA_RECORDING_TYPE_SCREEN', 'screen');
define('HA_RECORDING_TYPE_WEBCAM', 'webcam');

// Kayıt durumları
define('HA_RECORDING_STATUS_RECORDING', 'recording');
define('HA_RECORDING_STATUS_COMPLETED', 'completed');
define('HA_RECORDING_STATUS_FAILED', 'failed');
define('HA_RECORDING_STATUS_PROCESSING', 'processing');

// Dosya tipleri
define('HA_FILE_TYPE_IMAGE', 'image');
define('HA_FILE_TYPE_AUDIO', 'audio');
define('HA_FILE_TYPE_VIDEO', 'video');
define('HA_FILE_TYPE_DOCUMENT', 'document');
define('HA_FILE_TYPE_ARCHIVE', 'archive');

// Medya formatları
define('HA_IMAGE_FORMATS', ['jpg', 'jpeg', 'png', 'gif', 'webp']);
define('HA_AUDIO_FORMATS', ['mp3', 'wav', 'ogg', 'webm']);
define('HA_VIDEO_FORMATS', ['mp4', 'webm', 'avi', 'mov']);
define('HA_DOCUMENT_FORMATS', ['pdf', 'doc', 'docx', 'txt']);

// =======================================================================
// RAPOR VE ANALİTİK SABİTLERİ
// =======================================================================

// Rapor tipleri
define('RP_REPORT_TYPE_STUDENT', 'student');           // Öğrenci raporu
define('RP_REPORT_TYPE_EXAM', 'exam');                 // Sınav raporu
define('RP_REPORT_TYPE_PERFORMANCE', 'performance');   // Performans raporu
define('RP_REPORT_TYPE_COMPARISON', 'comparison');     // Karşılaştırma raporu
define('RP_REPORT_TYPE_STATISTICS', 'statistics');     // İstatistik raporu
define('RP_REPORT_TYPE_HISTORICAL', 'historical');     // Geçmiş raporu

// Rapor formatları
define('RP_FORMAT_HTML', 'html');
define('RP_FORMAT_PDF', 'pdf');
define('RP_FORMAT_EXCEL', 'excel');
define('RP_FORMAT_CSV', 'csv');
define('RP_FORMAT_JSON', 'json');

// Notlandırma tipleri
define('RP_GRADING_TYPE_AI', 'ai');                    // Yapay zeka notlandırması
define('RP_GRADING_TYPE_MANUAL', 'manual');            // Manuel notlandırma
define('RP_GRADING_TYPE_HYBRID', 'hybrid');            // Hibrit notlandırma
define('RP_GRADING_TYPE_AUTOMATIC', 'automatic');      // Otomatik notlandırma

// =======================================================================
// API VE ENTEGRASYON SABİTLERİ
// =======================================================================

// HTTP durum kodları
define('TN_HTTP_OK', 200);
define('TN_HTTP_CREATED', 201);
define('TN_HTTP_BAD_REQUEST', 400);
define('TN_HTTP_UNAUTHORIZED', 401);
define('TN_HTTP_FORBIDDEN', 403);
define('TN_HTTP_NOT_FOUND', 404);
define('TN_HTTP_METHOD_NOT_ALLOWED', 405);
define('TN_HTTP_INTERNAL_ERROR', 500);
define('TN_HTTP_SERVICE_UNAVAILABLE', 503);

// API response tipleri
define('TN_API_RESPONSE_SUCCESS', 'success');
define('TN_API_RESPONSE_ERROR', 'error');
define('TN_API_RESPONSE_WARNING', 'warning');
define('TN_API_RESPONSE_INFO', 'info');

// SHGM API sabitleri
define('TN_SHGM_API_VERSION', $_ENV['SHGM_API_VERSION'] ?? 'v1');
define('TN_SHGM_API_TIMEOUT', (int)($_ENV['SHGM_API_TIMEOUT'] ?? 30));
define('TN_SHGM_API_RETRY_COUNT', 3);
define('TN_SHGM_API_RETRY_DELAY', 2);

// API rate limiting
define('TN_API_RATE_LIMIT_REQUESTS', 100);      // İstek sayısı
define('TN_API_RATE_LIMIT_WINDOW', 3600);       // Zaman penceresi (saniye)
define('TN_API_RATE_LIMIT_BAN_TIME', 1800);     // Ban süresi (saniye)

// =======================================================================
// GÜVENLİK SABİTLERİ
// =======================================================================

// Güvenlik seviyeleri
define('TN_SECURITY_LEVEL_LOW', 1);
define('TN_SECURITY_LEVEL_MEDIUM', 2);
define('TN_SECURITY_LEVEL_HIGH', 3);
define('TN_SECURITY_LEVEL_MAXIMUM', 4);

// Şifreleme algoritmaları
define('TN_ENCRYPT_AES256', 'aes-256-gcm');
define('TN_ENCRYPT_AES128', 'aes-128-gcm');
define('TN_HASH_SHA256', 'sha256');
define('TN_HASH_SHA512', 'sha512');

// Güvenlik kontrolleri
define('TN_SECURITY_CHECK_IP', 'ip_check');
define('TN_SECURITY_CHECK_USER_AGENT', 'user_agent_check');
define('TN_SECURITY_CHECK_SESSION', 'session_check');
define('TN_SECURITY_CHECK_TOKEN', 'token_check');

// =======================================================================
// LOG VE HATA SABİTLERİ
// =======================================================================

// Log seviyeleri
define('TN_LOG_EMERGENCY', 'emergency');   // 0
define('TN_LOG_ALERT', 'alert');           // 1
define('TN_LOG_CRITICAL', 'critical');     // 2
define('TN_LOG_ERROR', 'error');           // 3
define('TN_LOG_WARNING', 'warning');       // 4
define('TN_LOG_NOTICE', 'notice');         // 5
define('TN_LOG_INFO', 'info');             // 6
define('TN_LOG_DEBUG', 'debug');           // 7

// Log türleri
define('TN_LOG_TYPE_SYSTEM', 'system');
define('TN_LOG_TYPE_USER', 'user');
define('TN_LOG_TYPE_EXAM', 'exam');
define('TN_LOG_TYPE_API', 'api');
define('TN_LOG_TYPE_SECURITY', 'security');
define('TN_LOG_TYPE_ERROR', 'error');

// Hata tipleri
define('TN_ERROR_TYPE_SYSTEM', 'system_error');
define('TN_ERROR_TYPE_DATABASE', 'database_error');
define('TN_ERROR_TYPE_API', 'api_error');
define('TN_ERROR_TYPE_VALIDATION', 'validation_error');
define('TN_ERROR_TYPE_PERMISSION', 'permission_error');
define('TN_ERROR_TYPE_AUTHENTICATION', 'auth_error');

// =======================================================================
// YAPAY ZEKA SABİTLERİ
// =======================================================================

// AI modelleri
define('TN_AI_MODEL_GPT4', 'gpt-4');
define('TN_AI_MODEL_GPT35_TURBO', 'gpt-3.5-turbo');
define('TN_AI_MODEL_CLAUDE', 'claude-3');

// AI görev tipleri
define('TN_AI_TASK_GRADING', 'grading');           // Notlandırma
define('TN_AI_TASK_FEEDBACK', 'feedback');         // Geri bildirim
define('TN_AI_TASK_ANALYSIS', 'analysis');         // Analiz
define('TN_AI_TASK_SUGGESTION', 'suggestion');     // Öneri

// AI güven seviyeleri
define('TN_AI_CONFIDENCE_LOW', 0.6);
define('TN_AI_CONFIDENCE_MEDIUM', 0.75);
define('TN_AI_CONFIDENCE_HIGH', 0.9);

// =======================================================================
// SİSTEM PERFORMANS SABİTLERİ
// =======================================================================

// Cache süreleri (saniye)
define('TN_CACHE_SHORT', 300);        // 5 dakika
define('TN_CACHE_MEDIUM', 1800);      // 30 dakika
define('TN_CACHE_LONG', 3600);        // 1 saat
define('TN_CACHE_VERY_LONG', 86400);  // 1 gün

// Memory limitleri
define('TN_MEMORY_LIMIT_LOW', '128M');
define('TN_MEMORY_LIMIT_MEDIUM', '256M');
define('TN_MEMORY_LIMIT_HIGH', '512M');
define('TN_MEMORY_LIMIT_MAXIMUM', '1G');

// Batch işlem limitleri
define('TN_BATCH_SIZE_SMALL', 50);
define('TN_BATCH_SIZE_MEDIUM', 100);
define('TN_BATCH_SIZE_LARGE', 500);

// =======================================================================
// TARİH VE ZAMAN SABİTLERİ
// =======================================================================

// Tarih formatları
define('TN_DATE_FORMAT', 'Y-m-d');
define('TN_TIME_FORMAT', 'H:i:s');
define('TN_DATETIME_FORMAT', 'Y-m-d H:i:s');
define('TN_DISPLAY_DATE_FORMAT', 'd.m.Y');
define('TN_DISPLAY_DATETIME_FORMAT', 'd.m.Y H:i');

// Zaman dilimleri
define('TN_TIMEZONE_ISTANBUL', 'Europe/Istanbul');
define('TN_TIMEZONE_UTC', 'UTC');

// =======================================================================
// VALIDATION SABİTLERİ
// =======================================================================

// TC Kimlik No validation
define('TN_TC_LENGTH', 11);
define('TN_TC_PATTERN', '/^[1-9][0-9]{10}$/');

// Email validation
define('TN_EMAIL_MAX_LENGTH', 255);
define('TN_EMAIL_PATTERN', '/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/');

// Password validation
define('TN_PASSWORD_MIN_LENGTH', 8);
define('TN_PASSWORD_MAX_LENGTH', 128);
define('TN_PASSWORD_REQUIRE_UPPER', true);
define('TN_PASSWORD_REQUIRE_LOWER', true);
define('TN_PASSWORD_REQUIRE_NUMBER', true);
define('TN_PASSWORD_REQUIRE_SPECIAL', true);

// Phone validation
define('TN_PHONE_PATTERN', '/^(\+90|0)?[5][0-9]{9}$/');

// =======================================================================
// MESAJ VE BİLDİRİM SABİTLERİ
// =======================================================================

// Bildirim tipleri
define('TN_NOTIFICATION_SUCCESS', 'success');
define('TN_NOTIFICATION_ERROR', 'error');
define('TN_NOTIFICATION_WARNING', 'warning');
define('TN_NOTIFICATION_INFO', 'info');

// Email şablon tipleri
define('TN_EMAIL_TEMPLATE_WELCOME', 'welcome');
define('TN_EMAIL_TEMPLATE_EXAM_REMINDER', 'exam_reminder');
define('TN_EMAIL_TEMPLATE_RESULTS', 'exam_results');
define('TN_EMAIL_TEMPLATE_PASSWORD_RESET', 'password_reset');

// =======================================================================
// HELPER FONKSİYONLAR
// =======================================================================

/**
 * Sabit değer dizisini döndür
 */
function tn_get_constants($prefix = 'TN_') {
    $constants = get_defined_constants(true)['user'];
    $filtered = [];
    
    foreach ($constants as $name => $value) {
        if (strpos($name, $prefix) === 0) {
            $filtered[$name] = $value;
        }
    }
    
    return $filtered;
}

/**
 * Exam status options
 */
function tn_exam_statuses() {
    return [
        HA_EXAM_STATUS_DRAFT => 'Taslak',
        HA_EXAM_STATUS_PUBLISHED => 'Yayınlanmış',
        HA_EXAM_STATUS_ACTIVE => 'Aktif',
        HA_EXAM_STATUS_COMPLETED => 'Tamamlanmış',
        HA_EXAM_STATUS_CANCELLED => 'İptal Edilmiş',
        HA_EXAM_STATUS_ARCHIVED => 'Arşivlenmiş'
    ];
}

/**
 * Question types options
 */
function tn_question_types() {
    return [
        HA_QUESTION_TYPE_MULTIPLE_CHOICE => 'Çoktan Seçmeli',
        HA_QUESTION_TYPE_TRUE_FALSE => 'Doğru/Yanlış',
        HA_QUESTION_TYPE_FILL_BLANK => 'Boşluk Doldurma',
        HA_QUESTION_TYPE_ESSAY => 'Açık Uçlu',
        HA_QUESTION_TYPE_MATCHING => 'Eşleştirme',
        HA_QUESTION_TYPE_ORDERING => 'Sıralama'
    ];
}

/**
 * Difficulty levels options
 */
function tn_difficulty_levels() {
    return [
        HA_DIFFICULTY_EASY => 'Kolay',
        HA_DIFFICULTY_MEDIUM => 'Orta',
        HA_DIFFICULTY_HARD => 'Zor',
        HA_DIFFICULTY_EXPERT => 'Uzman'
    ];
}

/**
 * User roles options
 */
function tn_user_roles() {
    return [
        TN_ROLE_SUPER_ADMIN => 'Süper Yönetici',
        TN_ROLE_ADMIN => 'Yönetici',
        TN_ROLE_INSTRUCTOR => 'Eğitmen',
        TN_ROLE_STUDENT => 'Öğrenci',
        TN_ROLE_OBSERVER => 'Gözlemci'
    ];
}

/**
 * System version bilgisi
 */
function tn_system_info() {
    return [
        'name' => APP_NAME,
        'version' => APP_VERSION,
        'environment' => APP_ENV,
        'php_version' => PHP_VERSION,
        'server_time' => date(TN_DATETIME_FORMAT),
        'timezone' => APP_TIMEZONE,
        'memory_limit' => ini_get('memory_limit'),
        'max_execution_time' => ini_get('max_execution_time'),
        'upload_max_filesize' => ini_get('upload_max_filesize'),
        'post_max_size' => ini_get('post_max_size')
    ];
}

// Başarılı yükleme mesajı
if (APP_DEBUG) {
    $constantCount = count(tn_get_constants());
    error_log('[TN_CONSTANTS] ' . $constantCount . ' constants loaded successfully at ' . date('Y-m-d H:i:s'));
}
?>